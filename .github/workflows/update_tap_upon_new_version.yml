name: Get latest release sourcegit version
on:
  workflow_dispatch:
  
  schedule:
    - cron:  '0 0,6,12,18 * * *'
jobs:
  osx-app-to-homebrew:
    runs-on: macos-latest
        
    steps:
        
      - uses: actions/checkout@v2
        with:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Fetch latest release version
        id: fetch_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # curl -sL -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/sourcegit-scm/sourcegit/releases/latest
          # curl -sL https://api.github.com/repos/sourcegit-scm/sourcegit/releases/latest | jq -r ".tag_name" | cut -d v -f 2
          
          latest_version=$(curl -sL -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/sourcegit-scm/sourcegit/releases/latest | jq -r ".tag_name" | cut -d v -f 2)
          if [ -z "$latest_version" ] || [ "$latest_version" == "null" ]; then
            echo "Failed to fetch latest version from GitHub API."
            exit 1
          fi
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Get current version from sourcegit.rb
        id: current_version
        run: |
          current_version=$(grep 'version ' ./Casks/sourcegit.rb | cut -d '"' -f 2)
          echo "current_version=$current_version" >> $GITHUB_ENV
          
      - name: Compare versions
        id: version_check
        run: |
          if [ "$latest_version" != "$current_version" ]; then
            echo "Versions differ. Proceeding with action."
            echo "new_version_found=true" >> $GITHUB_ENV
          else
            echo "Versions are the same. No action needed."
            echo "new_version_found=false" >> $GITHUB_ENV
          fi
        
      - name: Release to Homebrew Private Tap
        if: env.new_version_found == 'true'
        env:
          VERSION: ${{ env.latest_version }}
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: homebrew-releaser

        # TODO: replace "ybeapps/homebrew-sourcegit" with "sourcegit-scm/homebrew-sourcegit"
        run: |
          echo "=== Adding tap ==="
          brew tap ybeapps/homebrew-sourcegit

          TAP_REPO=$(brew --repository ybeapps/homebrew-sourcegit)
          echo "Tap repository: $TAP_REPO"

          echo "=== Bumping cask ==="
          brew bump-cask-pr --no-fork --version $VERSION --no-browse --message "Update SourceGit to version $VERSION" --write-only --commit sourcegit

          cd "$TAP_REPO"

          # Commit the changes in tap repo
          echo "=== Committing in tap repo ==="
          git add Casks/sourcegit.rb
          git commit -m "Update SourceGit to version $VERSION"
          
          echo "=== Commit Debug ==="
          echo "Git status after bump:"
          git status
          echo "Last 5 commits:"
          git log --oneline -5
          echo "Staged changes:"
          git diff --cached --name-only
          echo "Unstaged changes:"
          git diff --name-only
          echo "Untracked files:"
          git ls-files --others --exclude-standard
          echo

          cd - # Go back to original directory
          
          git remote add local-other "$TAP_REPO"
          git fetch local-other
          git reset --hard local-other/main
          
          git status
          
          git push origin
          git push origin main
